using UnityEngine;
using System.Collections.Generic;

public class Tower : MonoBehaviour
{
    public GameObject bulletPrefab; // Prefab vi√™n ƒë·∫°n
    public Transform firePoint; // V·ªã tr√≠ b·∫Øn ƒë·∫°n
    public float fireRate = 1f; // T·ªëc ƒë·ªô b·∫Øn (m·ªói gi√¢y)
    private float fireCooldown = 0f;
    
    public AudioSource shootAudioSource; // AudioSource ƒë·ªÉ ph√°t √¢m thanh b·∫Øn
    public AudioClip shootSound; // √Çm thanh b·∫Øn

    private List<GameObject> enemiesInRange = new List<GameObject>();

    void Update()
    {
        if (this == null || firePoint == null) return; // üî• Ki·ªÉm tra n·∫øu th√°p b·ªã x√≥a

        fireCooldown -= Time.deltaTime;

        // ‚úÖ X√≥a nh·ªØng qu√°i ƒë√£ b·ªã h·ªßy
        enemiesInRange.RemoveAll(enemy => enemy == null);

        if (fireCooldown <= 0f && enemiesInRange.Count > 0)
        {
            Fire();
            fireCooldown = 1f / fireRate; // Reset th·ªùi gian ch·ªù b·∫Øn
        }
    }

    void Fire()
    {
        if (this == null || firePoint == null || enemiesInRange.Count == 0) return; // üî• Ki·ªÉm tra l·∫°i tr∆∞·ªõc khi b·∫Øn

        GameObject targetEnemy = enemiesInRange[0];
        if (targetEnemy == null) return; // üî• N·∫øu qu√°i b·ªã x√≥a, kh√¥ng b·∫Øn

        GameObject bullet = Instantiate(bulletPrefab, firePoint.position, Quaternion.identity);
        bullet.GetComponent<Bullet>().SetTarget(targetEnemy); // Nh·∫Øm v√†o qu√°i
        
        // üéµ Ph√°t √¢m thanh b·∫Øn n·∫øu c√≥
        if (shootAudioSource != null && shootSound != null)
        {
            shootAudioSource.PlayOneShot(shootSound);
        }
    }

    void OnTriggerEnter2D(Collider2D other)
    {
        if (other.gameObject.layer == LayerMask.NameToLayer("Enemy")) 
        {
            enemiesInRange.Add(other.gameObject);
        }
    }

    void OnTriggerExit2D(Collider2D other)
    {
        if (other.gameObject.layer == LayerMask.NameToLayer("Enemy"))
        {
            enemiesInRange.Remove(other.gameObject);
        }
    }

    void OnDestroy()
    {
        enemiesInRange.Clear(); // üî• Khi th√°p b·ªã x√≥a, x√≥a danh s√°ch qu√°i
    }
}
